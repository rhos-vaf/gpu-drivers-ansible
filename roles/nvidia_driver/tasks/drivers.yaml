---
- name: Deal with nouveau driver
  when: nvidia_driver_blacklist_nouveau | bool
  block:
    - name: Blacklist nouveau kernel module
      ansible.builtin.blockinfile:
        block: |
          blacklist nouveau
        path: /etc/modprobe.d/blacklist.conf
        mode: "0644"
        create: true

    - name: Remove nouveau kernel module if loaded
      ansible.builtin.command: modprobe -r nouveau
      failed_when: false
      changed_when: false

- name: Add EPEL repository for DKMS support (if needed)
  ansible.builtin.yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: https://download.fedoraproject.org/pub/epel/9/Everything/$basearch/
    enabled: 1
    gpgcheck: 1
    gpgkey: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9
  when: "'dkms' in nvidia_driver_module_version"

- name: Install NVIDIA driver from repository
  when: nvidia_driver_url == ""
  block:
    - ansible.builtin.dnf:
        name: "@nvidia-driver:{{ nvidia_driver_module_version }}"
        state: present
      when: nvidia_driver_url == ""

    - name: Install the nvidia CUDA driver
      ansible.builtin.dnf:
        name: cuda-drivers
        state: present
      when: nvidia_driver_install_cuda_drivers | bool

- name: Install NVIDIA driver from custom URL
  when: nvidia_driver_url != ""
  block:
    - name: Extract filename from URL
      ansible.builtin.set_fact:
        _nvidia_driver_filename: "{{ nvidia_driver_url.split('/')[-1] }}"

    - name: Check if custom driver URL has allowable extension
      ansible.builtin.assert:
        that: _nvidia_driver_filename | regex_search('\\.(rpm|run)$') is not none
        fail_msg: "nvidia_driver_url must end with .rpm or .run extension. Current URL: {{ nvidia_driver_url }}"

    - name: Create temporary directory for driver download
      ansible.builtin.tempfile:
        state: directory
        suffix: nvidia_driver
      register: _nvidia_driver_temp_dir

    - name: Set temporary file path
      ansible.builtin.set_fact:
        _nvidia_driver_temp_path: "{{ _nvidia_driver_temp_dir.path }}/{{ _nvidia_driver_filename }}"

    - name: Check if custom driver URL is a .run file
      ansible.builtin.set_fact:
        _nvidia_driver_is_run_file: "{{ _nvidia_driver_filename | regex_search('\\.run$') is not none }}"

    - name: Download NVIDIA driver from custom URL
      ansible.builtin.get_url:
        url: "{{ nvidia_driver_url }}"
        dest: "{{ _nvidia_driver_temp_path }}"
        mode: "{{ '0755' if _nvidia_driver_is_run_file else '0644' }}"
        validate_certs: false

    - name: Install NVIDIA driver from RPM
      when: not _nvidia_driver_is_run_file
      ansible.builtin.dnf:
        name: "{{ _nvidia_driver_temp_path }}"
        state: present
        disable_gpg_check: true

    - name: Install NVIDIA driver from .run file
      when: _nvidia_driver_is_run_file
      block:
        - name: Get running kernel version
          ansible.builtin.command: uname -r
          register: _nvidia_driver_kernel_version_result
          changed_when: false

        - name: Set kernel version fact
          ansible.builtin.set_fact:
            _nvidia_driver_kernel_version: "{{ _nvidia_driver_kernel_version_result.stdout | replace('.x86_64', '') }}"

        - name: Install dependencies for .run driver installation
          ansible.builtin.dnf:
            name:
              - pciutils
              - gcc
              - "kernel-headers-{{ _nvidia_driver_kernel_version }}"
              - "kernel-devel-{{ _nvidia_driver_kernel_version }}"
            state: present

        - name: Execute .run file
          ansible.builtin.command: "{{ _nvidia_driver_temp_path }} --no-dkms --no-disable-nouveau --silent"
          args:
            creates: /usr/bin/nvidia-smi

    - name: Clean up temporary directory
      ansible.builtin.file:
        path: "{{ _nvidia_driver_temp_dir.path }}"
        state: absent
      when: nvidia_driver_cleanup_temp_files | bool

- name: Refresh package facts after driver installation
  ansible.builtin.package_facts:
    manager: rpm
